#
map_type: costmap
origin_z: 0.0
z_resolution: 1 # The z resolution of the map in meters/cell.
z_voxels: 2  # The number of voxels to in each vertical column, the height of the grid is z resolution * z voxels.
#

obstacle_range: 1.0 # The default maximum distance from the robot at which an obstacle will be inserted into the cost map in meters.
raytrace_range: 2.5 # The default range in meters at which to raytrace out obstacles from the map using sensor data



#
publish_voxel_map: false

# footprint: [[0.33, 0.43], [-0.33, 0.43], [-0.33, -0.43], [0.33, -0.43], [0.45, 0]]
footprint: [[0.30, 0.40], [-0.30, 0.40], [-0.30, -0.40], [0.30, -0.40]]
footprint_padding: 0

# footprint_padding: 0.2
# footprint_padding: 0.01
# inflation_radius: 0.01  # controls how far away the zero cost point is from the obstacle
inflation_radius: 0.5  # controls how far away the zero cost point is from the obstacle
# cost_scaling_factor: 1.0 # slope of the cost decay curve with respect to distance from the object. lower makes robot stay further from obstacles
# cost_scaling_factor: 0.5 # slope of the cost decay curve with respect to distance from the object. lower makes robot stay further from obstacles



observation_sources: laser_scan_sensor

# laser_scan_sensor: {sensor_frame: laser_link, data_type: LaserScan, topic: scan, marking: true, clearing: true}
laser_scan_sensor: {sensor_frame: velodyne, data_type: LaserScan, topic: scan, marking: true, clearing: true}
# laser_scan_sensor:
#   sensor_frame: velodyne
#   data_type: LaserScan
#   topic: scan
#   marking: true
#   clearing: true
#   filter: robot_self_filter
#   filter_range: 3.0  # Only process data within 3 meters
#   min_range: 0.5      # Ignore data closer than 0.5 meters
#   excluded_frames:
#     - base_link
#     - vlp16_mount_base_link
#     - vlp16_mount_plate
#     - t_base_link
#     - camera_p_realsense_mountpoint


