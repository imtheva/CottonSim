<launch>

    <param name="orchard_geom" command="$(find xacro)/xacro --inorder '$(find cotton_env)/urdf/cotton_geometry.urdf.xacro'" />
    <arg name="platform" default="$(optenv CPR_GAZEBO_PLATFORM husky)" />

    <arg name="robot_x" default="-6.0"/>
    <arg name="robot_y" default="1.0"/>
    <!-- <arg name="robot_z" default="200"/> -->
    <arg name="robot_z" default="0.2"/>
    <arg name="robot_yaw" default="1.5707963267948966" />

    <arg name="world_x" default="0.0"/>
    <arg name="world_y" default="0.0"/>
    <arg name="world_z" default="0.0"/>
    <arg name="world_yaw" default="0.0"/>

    <!--Robot description and related parameter files -->
    <!-- <arg name="robot_description_file" default="$(dirname)/inc/load_ur5e.launch.xml" doc="Launch file which populates the 'robot_description' parameter."/>
    <arg name="joint_limit_params" default="$(find ur_description)/config/ur5e/joint_limits.yaml"/>
    <arg name="kinematics_params" default="$(find ur_description)/config/ur5e/default_kinematics.yaml"/>
    <arg name="physical_params" default="$(find ur_description)/config/ur5e/physical_parameters.yaml"/>
    <arg name="visual_params" default="$(find ur_description)/config/ur5e/visual_parameters.yaml"/> -->

    <!-- Controller configuration -->
    <!-- <arg name="controller_config_file" default="$(find ur_gazebo)/config/ur5e_controllers.yaml" doc="Config file used for defining the ROS-Control controllers."/>
    <arg name="controllers" default="joint_state_controller eff_joint_traj_controller" doc="Controllers that are activated by default."/>
    <arg name="stopped_controllers" default="joint_group_eff_controller" doc="Controllers that are initally loaded, but not started."/> -->

    <!-- robot_state_publisher configuration -->
    <!-- <arg name="tf_prefix" default="" doc="tf_prefix used for the robot."/>
    <arg name="tf_pub_rate" default="500" doc="Rate at which robot_state_publisher should publish transforms."/> -->

    <arg name="use_sim_time" default="true" />
    <arg name="gui" default="true" />
    <arg name="headless" default="false" />
    <arg name="world_name" default="$(find cotton_env)/worlds/actually_empty_world.world" />
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="debug" value="0" />
        <arg name="gui" value="$(arg gui)" />
        
        <arg name="use_sim_time" value="$(arg use_sim_time)" />
        <arg name="headless" value="$(arg headless)" />
        <arg name="world_name" value="$(arg world_name)" />
    </include>

    <!-- <include file="$(arg robot_description_file)">
        <arg name="joint_limit_params" value="$(arg joint_limit_params)"/>
        <arg name="kinematics_params" value="$(arg kinematics_params)"/>
        <arg name="physical_params" value="$(arg physical_params)"/>
        <arg name="visual_params" value="$(arg visual_params)"/>
    </include> -->

 <node name="cotton_gazebo_spawner" pkg="gazebo_ros" type="spawn_model"
      args="-urdf -model orchard_geometry -param orchard_geom -x $(arg world_x) -y $(arg world_y) -z $(arg world_z) -Y $(arg world_yaw)" />
    <!-- Robot state publisher -->
    <!-- <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher2">
        <param name="publish_frequency" type="double" value="$(arg tf_pub_rate)" />
        <param name="tf_prefix" value="$(arg tf_prefix)" />
    </node> -->
    <!-- <arg name="paused" default="false" doc="Starts Gazebo in paused mode" /> -->
    <!-- Start the 'driver' (ie: Gazebo in this case) -->
  <!-- <include file="$(dirname)/inc/ur_control.launch.xml">
    <arg name="controller_config_file" value="$(arg controller_config_file)"/>
    <arg name="controllers" value="$(arg controllers)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="stopped_controllers" value="$(arg stopped_controllers)"/>
  </include> -->

<include file="$(find husky_gazebo)/launch/spawn_$(arg platform).launch">
      

      <arg name="x" value="$(arg robot_x)"/>
      <arg name="y" value="$(arg robot_y)"/>
      <arg name="z" value="$(arg robot_z)"/>
      <arg name="yaw" value="$(arg robot_yaw)"/>
    </include>


<!-- Testing with UR5e -->

<!-- <arg name="controller_config_file" default="$(find ur_gazebo)/config/ur5e_controllers.yaml" doc="Config file used for defining the ROS-Control controllers."/>
    <arg name="controllers" default="joint_state_controller eff_joint_traj_controller" doc="Controllers that are activated by default."/>
    <arg name="stopped_controllers" default="joint_group_eff_controller" doc="Controllers that are initally loaded, but not started."/> -->

<!-- <arg name="paused" default="false" doc="Starts Gazebo in paused mode" /> -->
    <!-- Start the 'driver' (ie: Gazebo in this case) -->
  <!-- <include file="$(find ur_gazebo)/launch/inc/ur_control.xml">
    <arg name="controller_config_file" value="$(arg controller_config_file)"/>
    <arg name="controllers" value="$(arg controllers)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="stopped_controllers" value="$(arg stopped_controllers)"/>
  </include> -->
   

    <!-- <include file="$(find ur_gazebo)/launch/spawni_$(arg platform).launch" /> -->

    





</launch>
